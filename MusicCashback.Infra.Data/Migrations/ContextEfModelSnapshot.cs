// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicCashback.Infra.Data.SQLServer.Context;

namespace MusicCashback.Infra.Data.Migrations
{
    [DbContext(typeof(ContextEf))]
    partial class ContextEfModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicCashback.Domain.Entities.Artista", b =>
                {
                    b.Property<int>("ArtistaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Datetime")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ArtistaId");

                    b.ToTable("Artista");
                });

            modelBuilder.Entity("MusicCashback.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Datetime")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("MusicCashback.Domain.Entities.Disco", b =>
                {
                    b.Property<int>("DiscoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtistaId");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Datetime")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int?>("GeneroId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DiscoId");

                    b.HasIndex("ArtistaId");

                    b.HasIndex("GeneroId");

                    b.ToTable("Disco");
                });

            modelBuilder.Entity("MusicCashback.Domain.Entities.Genero", b =>
                {
                    b.Property<int>("GeneroId");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Datetime")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("GeneroId");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("MusicCashback.Domain.Entities.ItemVenda", b =>
                {
                    b.Property<int>("ItemVendaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cashback");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Datetime")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int?>("DiscoId");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("VendaId");

                    b.HasKey("ItemVendaId");

                    b.HasIndex("DiscoId");

                    b.HasIndex("VendaId");

                    b.ToTable("ItemVenda");
                });

            modelBuilder.Entity("MusicCashback.Domain.Entities.Venda", b =>
                {
                    b.Property<int>("VendaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cashback")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ClienteId");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Datetime")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VendaId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("MusicCashback.Domain.Entities.Disco", b =>
                {
                    b.HasOne("MusicCashback.Domain.Entities.Artista", "Artista")
                        .WithMany("Disco")
                        .HasForeignKey("ArtistaId");

                    b.HasOne("MusicCashback.Domain.Entities.Genero", "Genero")
                        .WithMany("Disco")
                        .HasForeignKey("GeneroId");
                });

            modelBuilder.Entity("MusicCashback.Domain.Entities.ItemVenda", b =>
                {
                    b.HasOne("MusicCashback.Domain.Entities.Disco", "Disco")
                        .WithMany("ItemVenda")
                        .HasForeignKey("DiscoId");

                    b.HasOne("MusicCashback.Domain.Entities.Venda", "Venda")
                        .WithMany("ItemVenda")
                        .HasForeignKey("VendaId");
                });

            modelBuilder.Entity("MusicCashback.Domain.Entities.Venda", b =>
                {
                    b.HasOne("MusicCashback.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Venda")
                        .HasForeignKey("ClienteId");
                });
#pragma warning restore 612, 618
        }
    }
}
